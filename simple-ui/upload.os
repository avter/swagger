#Использовать cmdline
#Использовать json
#Использовать swagger

Перем ИмяПроекта;
Перем ПутьКПроекту;
Перем ТипПроекта;
Перем АдминкаURL;
Перем Хост;
Перем База1С;

Процедура ИнициализироватьПараметрыЗапуска()

	Парсер = Новый ПарсерАргументовКоманднойСтроки();

	Парсер.ДобавитьИменованныйПараметр("-name");
	Парсер.ДобавитьИменованныйПараметр("-path");	
	Парсер.ДобавитьИменованныйПараметр("-type");
	Парсер.ДобавитьИменованныйПараметр("-adminurl");
	Парсер.ДобавитьИменованныйПараметр("-host");
	Парсер.ДобавитьИменованныйПараметр("-onecbase");

	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);

	ИмяПроекта = Параметры["-name"];
	ПутьКПроекту = Параметры["-path"];
	ТипПроекта = Параметры["-type"];
	АдминкаURL = Параметры["-adminurl"];
	Хост = Параметры["-host"];
	База1С = Параметры["-onecbase"];

КонецПроцедуры

Процедура ОшибкаСервиса(HTTPЗапрос, HTTPОтвет)
	
	Сообщить("Обращение: " + HTTPЗапрос.АдресРесурса);
	Сообщить("Код ответа: " + HTTPОтвет.КодСостояния);
	Сообщить("Тело ответа: " + HTTPОтвет.ПолучитьТелоКакСтроку());

	ЗавершитьРаботу(0);

КонецПроцедуры

// инициализация
ИнициализироватьПараметрыЗапуска();

// внутренние переменные
ЗагруженныеСпецификации = Новый Массив;
ОбновленныеСпецификации = Новый Массив;

HTTPСоединение = Новый HTTPСоединение(АдминкаURL);

Ответ200 = 200;

// получим текущий список спецификаций проекта
ЗапросСписок =  Новый HTTPЗапрос("list.os");

HTTPОтвет = HTTPСоединение.Получить(ЗапросСписок);

Если HTTPОтвет.КодСостояния <> Ответ200 Тогда
	ОшибкаСервиса(ЗапросСписок, HTTPОтвет);
КонецЕсли;

ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();

ПарсерJSON = Новый ПарсерJSON();

ПереченьСпецификаций = ПарсерJSON.ПрочитатьJSON(ТелоОтвета);

Для Каждого Проект Из ПереченьСпецификаций Цикл
	
	Если ИмяПроекта <> Проект["name"] Тогда
		Продолжить;
	КонецЕсли;

	Для Каждого ИмяСервиса Из Проект["services"] Цикл
		ЗагруженныеСпецификации.Добавить(ИмяСервиса);
	КонецЦикла;

	Прервать;

КонецЦикла;

// подключем проект
ПарсерМетаданных = Новый ПарсерМетаданных();

Если НЕ ПарсерМетаданных.ПодключитьКонфигурацию(ПутьКПроекту, ТипПроекта) Тогда

	Сообщить("Не удалось подключить конфигурацию!", СтатусСообщения.Внимание);
	ЗавершитьРаботу(0);

КонецЕсли;

// парсим все сервисы конфигурации
ПарсерМетаданных.ВыполнитьПарсингКонфигурации();

Для Каждого КЗ Из ПарсерМетаданных.ВнутренниеОписанияСервисов Цикл
	
	ИмяСервиса = КЗ.Ключ;
	ВнутреннееОписание = КЗ.Значение;

	ВнутреннееОписание.Хост = Хост;
	ВнутреннееОписание.База1С = База1С;

	// получаем OAS
	ГенераторСпецификации = Новый ГенераторСпецификации(ВнутреннееОписание);

	ГенераторСпецификации.ПрочитатьОписаниеСервиса();

	Спецификация = ГенераторСпецификации.ПолучитьСпецификацию();

	// отправляем в админку
	ЗапросСпецификация =  Новый HTTPЗапрос("spec.os?project=" + ИмяПроекта + "&service=" + ИмяСервиса);
	ЗапросСпецификация.УстановитьТелоИзСтроки(Спецификация);
	
	HTTPОтвет = HTTPСоединение.Записать(ЗапросСпецификация);

	Если HTTPОтвет.КодСостояния <> Ответ200 Тогда
		ОшибкаСервиса(ЗапросСпецификация, HTTPОтвет);
	КонецЕсли;

	ОбновленныеСпецификации.Добавить(ИмяСервиса);

КонецЦикла;

Для Каждого ИмяСервиса Из ЗагруженныеСпецификации Цикл
	
	Если ОбновленныеСпецификации.Найти(ИмяСервиса) <> Неопределено Тогда
		Продолжить;
	КонецЕсли;

	ЗапросСпецификация =  Новый HTTPЗапрос("spec.os?project=" + ИмяПроекта + "&service=" + ИмяСервиса);
	
	HTTPОтвет = HTTPСоединение.Удалить(ЗапросСпецификация);

	Если HTTPОтвет.КодСостояния <> Ответ200 Тогда
		ОшибкаСервиса(ЗапросСпецификация, HTTPОтвет);
	КонецЕсли;

КонецЦикла;